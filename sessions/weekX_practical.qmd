---
title: 'Practical XXX: XXX'
subtitle: "XXX"
format:
  html: default
  ipynb: default
filters:
  - qna
  - quarto
---

This week is focussed on XXX.

## To add a callout-note

:::{.callout-note}

Suggestions for a Better Learning Experience:

-   XXX
:::

## To add Python code without running them ...
``` python
import pandas as pd

# Read CSV file, skipping first 5 rows, using row 6 as header, and handling comma as thousands separator
df_pop = pd.read_csv(
    'L1_data/UK_census_population.csv',
    skiprows=5,        # Skip first 5 rows. Wnhy?
    thousands=',',     # Interpret commas as thousands separators
    header=0           # After skipping, the first row becomes the header
)

print(df_pop.head())
```

## To add and run Python code

```{python}
import pandas as pd

# Read CSV file, skipping first 5 rows, using row 6 as header, and handling comma as thousands separator
df_pop = pd.read_csv(
    'L1_data/UK_census_population.csv',
    skiprows=5,        # Skip first 5 rows. Wnhy?
    thousands=',',     # Interpret commas as thousands separators
    header=0           # After skipping, the first row becomes the header
)

print(df_pop.head())
```

## To add a photo - replace the path. Using relative path is also okay.

![]({{< var module.web >}}/sessions/L1_images/uk_pop_csv_screenshot.jpg){width="600"} 

<!-- ![](L1_images/uk_pop_csv_screenshot.jpg){width=600} -->

## To add some "questions"

The qmd file will be rendered as two files in sessions folder, including a html and ipynb format. The html file will contain both *question* and *answer*, while the ipynb file will contain only the *question*.

For the effect, please check [HTML](https://huanfachen.github.io/QM/sessions/weekX_practical.html) and [ipynb](https://huanfachen.github.io/QM/sessions/weekX_practical.ipynb).

::: qna
#### Question

```python
if ??
    ??
else:
    ??
```

#### Answer

#### Answer

```{python}
if 'Moscow' in ['Moscow', 'Beijing']:
    print("Moscow is in the cities list.")
else:
    print("Moscow is not in the cities list.")
```
:::

## You're Done!

Congratulations on completing the first QM practical session! If you are still working on it, take you time.

Don’t worry about understanding every detail of the Python code — what matters most is knowing which functions to use for a specific task, like checking minimum and maximum values or generating boxplots, and knowing how to debug when it goes wrong. Remember, practice makes perfect.

